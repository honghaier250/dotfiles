# To create a 2048-bit private key:
openssl genrsa -out server.key 2048

# To create the Certificate Signing Request (CSR):
openssl req -new -key server.key -out server.csr

# To sign a certificate using a private key and CSR:
openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt

# (The above commands may be run in sequence to generate a self-signed SSL certificate.)

# To show certificate information for a certificate signing request
openssl req -text -noout -in server.csr

# To show certificate information for generated certificate
openssl x509 -text -noout -in server.crt 

# To view certificate expiration:
echo | openssl s_client -connect <hostname>:443 2> /dev/null | \
awk '/-----BEGIN/,/END CERTIFICATE-----/' | \
openssl x509 -noout -enddate

# to verify dynamic engine 
openssl engine -vvvv dynamic \
-pre SO_PATH:/root/workspace/jdevp/build/libengine_sample.so \
-pre ID:sample \
-pre LOAD

# to create RSA certificate
openssl req -newkey rsa:1024 -keyout rsa_site_prikey.key -passout pass:"123456" -config siteOpenssl.cnf -new -out rsa_site_cert.req
openssl req -x509 -newkey rsa:1024 -keyout rsa_ca_prikey.key -passout pass:"123456" -config caOpenssl.cnf -new -out rsa_ca_cert.pem
openssl x509 -req -in rsa_site_cert.req -CA rsa_ca_cert.pem -CAkey rsa_ca_prikey.key -out rsa_site_cert.pem -CAcreateserial -days 365 -passin pass:"123456"

openssl genrsa -des -passout pass:"123456" -out rsa_ca_prikey.key 1024
openssl req -config caOpenssl.cnf -key rsa_ca_prikey.key -passin pass:"123456" -new -out rsa_ca_cert.req
openssl x509 -req -in rsa_ca_cert.req -signkey rsa_ca_prikey.key -passin pass:"123456" -out rsa_ca_cert.pem

openssl genrsa -des -passout pass:"123456" -out rsa_site_prikey.key 1024
openssl req -config siteOpenssl.cnf -key rsa_site_prikey.key -passin pass:"123456" -new -out rsa_site_cert.req
openssl x509 -req -in rsa_site_cert.req -CA rsa_ca_cert.pem -CAkey rsa_ca_prikey.key -passin pass:"123456" -out rsa_site_cert.pem -CAcreateserial

# to create ECC certificate
openssl ecparam -genkey -name prime256v1 -out ecc_ca_prikey.key 
openssl req -config caOpenssl.cnf -key ecc_ca_prikey.key -new -out ecc_ca_cert.req
openssl x509 -req -in ecc_ca_cert.req -signkey ecc_ca_prikey.key -out ecc_ca_cert.pem

openssl ecparam -genkey -name prime256v1 -out ecc_site_prikey.key 
openssl req -config siteOpenssl.cnf -key ecc_site_prikey.key -new -out ecc_site_cert.req
openssl x509 -req -in ecc_site_cert.req -CA ecc_ca_cert.pem -CAkey ecc_ca_prikey.key -out ecc_site_cert.pem -CAcreateserial

# to create DSA certificate
openssl dsaparam -genkey 512 -out dsa_ca_prikey.key
openssl req -config caOpenssl.cnf -key dsa_ca_prikey.key -new -out dsa_ca_cert.req
openssl x509 -req -in dsa_ca_cert.req -signkey dsa_ca_prikey.key -out dsa_ca_cert.pem

openssl dsaparam -genkey 512 -out dsa_site_prikey.key
openssl req -config siteOpenssl.cnf -key dsa_site_prikey.key -new -out dsa_site_cert.req
openssl x509 -req -in dsa_site_cert.req -CA dsa_ca_cert.pem -CAkey dsa_ca_prikey.key -out dsa_site_cert.pem -CAcreateserial

# create crl
openssl ca -revoke newcert.pem -keyfile demoCA/private/cakey.pem -passin pass:"123456" -cert demoCA/cacert.pem
openssl ca -gencrl -utf8 -keyfile demoCA/private/cakey.pem -passin pass:"123456" -cert demoCA/cacert.pem -out newcrl.pem

# extract public key
openssl x509 -in site_cert.pem -pubkey -noout > site_pubkey.key

# extract certificate req
openssl x509 -x509toreq -in site_cert.pem -out site_cert.req -signkey site_prikey.key -passin pass:"123456"

# 证书格式转换
openssl x509 -outform DER -in site_cert.der -out site_cert.pem
openssl pkcs12 -in mysite.p12 -nokeys -passin pass:123456 -out mysite.pem
openssl pkcs12 -in mysite.p12 -nocerts -passin pass:123456 -out mysite.key

# to verify certificate
openssl verify -CAfile certself.pem certuser.pem

# ssl handshake
openssl s_server -accept 2009 -key server.key -cert server.pem
openssl s_client -connect 127.0.0.1:2009 -key client.key -cert client.pem
